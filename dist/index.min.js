"use strict";var e=require("dotenv"),t=require("cheerio"),n=require("process"),r=require("fs"),o=require("@robertklep/qbittorrent"),a=require("https");function i(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var s=i(e),l=i(t),c=i(n),d=i(r);function u(e){let t=d.readdirSync(e).map((t=>function(e,t){try{let n=/UFC ([\d]+|FN|ESPN|ABC) (\w+) (\d+[ikp]) (\d+) (\d+) (\d+) (.*)/,[,r,o,a,i,s,l,c]=e.match(n),d=new Date(l,s-1,i),u=!1;try{let e=parseInt(r,10);isNaN(e)||(u=!0,r=e)}catch(e){console.warn("error parsing fight number in folder name"),console.warn(e)}return{fightNight:"FN"===r,onESPN:"ESPN"===r,onABC:"ABC"===r,eventType:o,resolution:a,eventNumber:u?r:void 0,eventName:c,date:d,matchingEvent:void 0,folderPath:`${t}\\${e}`}}catch(t){return console.warn(t),void console.warn(`Failed to parse file name ${e} could not find matching UFC event`)}}(t,e)));return t=t.filter((e=>void 0!==e)),t}let f=[],h=[];async function p(){let e=u(c.env.DOWNLOAD_DIRECTORY);f=e,await async function(){let e=[],t=l.load(await(await fetch("https://en.wikipedia.org/wiki/List_of_UFC_events")).text()),n=t("table#Past_events").toString();t=l.load(n),t("tbody").find("tr").map((function(n){if(0===n)return{};try{const n=t(this);let r,o=[];n.find("td").map((function(e){try{1===e&&(r="https://en.wikipedia.org"+t(this).children("a").attr("href"))}catch(e){console.warn("No fight link found")}return o.push(t(this).text().replace(/\n/g,"")),t(this).text()}));let a,i=o[1].trim(),s=o[2].trim(),l=i.toLowerCase().includes("fight night"),d=i.toLowerCase().includes("on espn");l||d||(a=i.match(/UFC \d+/)?.[0]?.match(/\d+/)?.[0],a&&(a=parseInt(a)));let u=i.normalize("NFD").replace(/[\u0300-\u036f.:]/g,""),f=new Date(s),h=Date.now()-f.valueOf()<864e5*parseInt(c.env.CHECK_LAST_N_DAYS);d&&"false"===c.env.GET_FIGHT_NIGHT&&(h=!1),l&&"false"===c.env.GET_FIGHT_NIGHT&&(h=!1),u=u.replace("Fight Night",""),u=u.replace(/UFC \d+/,""),u=u.replace("UFC",""),u=u.replace("on ESPN",""),u=u.trim(),e.push({monitored:h,eventNumber:a,eventName:u,uid:o[0],fightNight:l,onESPN:d,eventType:"main",resolution:void 0,date:f,eventURL:r,downloads:[],lookForDownload:!1})}catch(e){console.warn("Error parsing table row")}})),h=e,console.log(e)}(),function(e){e.forEach((e=>{let t;h.forEach((n=>{let r=0;n.date&&e.date&&Math.abs(n.date.valueOf()-e.date.valueOf())<18e6?r+=10:n.date&&e.date&&Math.abs(n.date.valueOf()-e.date.valueOf())>1728e5&&(r-=5),n.date&&e.date&&Math.abs(n.date.valueOf()-e.date.valueOf())>864e6&&(r-=20),n.fightNight!==e.fightNight&&(r-=15),n.onESPN!==e.onESPN&&(r-=15),n.eventNumber&&e.eventNumber&&n.eventNumber===e.eventNumber&&(r+=10),n.eventName===e.eventName&&(r+=20),r>0&&(t=n)})),t&&(t.downloads.push(e),e.matchingEvent=t)})),h.forEach((e=>{if(e&&e.monitored){let t=!e.downloads.some((e=>"main"===e.eventType)),n=!e.downloads.some((e=>"prelims"===e.eventType))&&Boolean("true"===c.env.GET_PRELIMS),r=!e.downloads.some((e=>"countdown"===e.eventType))&&"true"===c.env.GET_COUNTDOWN;e.lookForDownload=t||n||r}}))}(e)}const w={};async function m(e){if(w[e])return{...w[e]};let t=await fetch(`${process.env.PROWLARR_BASE_URL}/api/v1/indexer/${e}`,{method:"GET",headers:{"X-Api-Key":process.env.PROWLARR_KEY,"Content-Type":"application/json"}});try{if(200===t.status)return w[e]=await t.json(),{...w[e]}}catch(e){throw console.warn("error parsing indexer info from prowlarr."),console.warn(e),new Error("Error parsing indexer info from prowlarr.")}throw console.warn(`Error: Prowlarr responded to indexer info request with ${t.status}`),new Error(`Error: Prowlarr responded to indexer info request with ${t.status}`)}async function v({eventDate:e,eventName:t,fightNight:n=!1,eventNumber:r,acceptableQuality:o,maxSizeBytes:a,minSeeders:i,eventType:s="main"}){let l="UFC";n&&(l+="+Fight+Night"),r&&(l+=`+${r}`),t&&(l+=`+${t}`),console.log(`Query is ${l}`);let c=await fetch(`${process.env.PROWLARR_BASE_URL}/api/v1/search?query=${l}&indexerIds=-2&type=search&apikey=${process.env.PROWLARR_KEY}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(200!==c.status){console.warn("Error: Could not reach Prowlarr"),console.warn(`Could not send fetch request, failed with status ${c.status}`);try{let e=c.text();console.warn(`Response: ${e}`)}catch(e){console.warn("Response had no body")}return void console.warn("Giving up finding torrent")}let d=[];try{d=await c.json()}catch(e){console.warn("Response from prowlarr invalid"),console.warn(e);try{let e=c.text();console.warn(`Response: ${e}`)}catch(e){console.warn("Response had no body")}}return console.log(`found ${d.length} results total`),d=await async function(e){e.forEach((e=>{["early prelims","early preliminaries"," early"].some((t=>e.title.toLowerCase().includes(t.toLowerCase())||e.sortTitle.toLowerCase().includes(t)))?e.eventType="earlyPrelims":["prelims","preliminaries","preliminary"].some((t=>e.title.toLowerCase().includes(t.toLowerCase())||e.sortTitle.toLowerCase().includes(t)))?e.eventType="prelims":[" countdown "].some((t=>e.title.toLowerCase().includes(t.toLowerCase())||e.sortTitle.toLowerCase().includes(t)))?e.eventType="countdown":e.eventType="main"}));for(let t=0;t<e.length;t++){const n=e[t];n.indexerPriority=(await m(n.indexerId)).priority}return e}(d),d=function({eventDate:e,eventName:t,eventNumber:n,acceptableQuality:r,maxSizeBytes:o,minSeeders:a,eventType:i},s){let l=e=>{Array.isArray(e)||(e=[e]),Array.isArray(e)&&(s=s.filter((t=>e.some((e=>t.title.toLowerCase().includes(e.toLowerCase())||t.sortTitle.toLowerCase().includes(e))))))};l("UFC"),console.log(`found ${s.length} with UFC in title`),n&&(l(n.toString()),console.log(`found ${s.length} with correct event number`));if(t){(t=(t=t.normalize("NFD").replace(/[\u0300-\u036f.:]/g,"")).replace(" vs "," ")).split(" ").forEach((e=>{l(e.toString())})),console.log(`found ${s.length} with correct event name`)}r&&(l(r),console.log(`found ${s.length} with Acceptable Quality`));a&&(s=s.filter((e=>e.seeders>a)),console.log(`found ${s.length} with more than ${a} seeders`));o&&(s=s.filter((e=>e.size<o)),console.log(`found ${s.length} smaller than ${Math.round(o/1e9*100)/100} GB`));return s=s.filter((e=>!e.sortTitle.match(/part [\d]/))),console.log(`found ${s.length} results that aren't multi-part`),s=s.filter((e=>e.eventType===i)),console.log(`found ${s.length} results that are the correct event type`),s}({eventDate:e,eventName:t,eventNumber:r,acceptableQuality:o,maxSizeBytes:a,minSeeders:i,eventType:s},d),function(e){e.sort(((e,t)=>e.indexerPriority!==t.indexerPriority?e.indexerPriority-t.indexerPriority:t.seeders-e.seeders))}(d),console.log("Best result: "),console.log(JSON.stringify(d[0]||{})),d}let g;async function y(e,t,n=void 0){await async function(){g||(g=new o.qBittorrentClient(`http://localhost:${c.env.QBIT_API_PORT}`,c.env.QBIT_API_USERNAME,c.env.QBIT_API_PASS),await g.auth.login(c.env.QBIT_API_USERNAME,c.env.QBIT_API_PASS),await g.app.version())}();let r={urls:e,savepath:t,category:"UFC",root_folder:"false"};n&&(r.rename=n),await g.torrents.add(r)}async function N(e,t="main"){let n=await v({eventDate:e.date,eventName:e.eventName,fightNight:e.fightNight,eventNumber:e.eventNumber,acceptableQuality:["1080p"],maxSizeBytes:11e9,minSeeders:2,eventType:t});if(n.length>0){let r=n[0],o=function(e,t="main",n="1080p"){let r="UFC";return e.fightNight?r+=" FN":e.onESPN?r+=" ESPN":e.onABC?r+=" ABC":r+=` ${e.eventNumber}`,r+=` ${t}`,r+=` ${n}`,r+=` ${e.date.getDate()} ${e.date.getMonth()+1} ${e.date.getFullYear()}`,r+=` ${e.eventName}`,r}(e,t),a=`${process.env.DOWNLOAD_DIRECTORY}\\${o}\\`;d.existsSync(a)||d.mkdirSync(a),await y(r.downloadUrl,a,o)}}async function T(e){let t=[`${e.folderPath}\\`];if(P(e.folderPath).forEach((n=>{t.push(`${e.folderPath}\\${n}`)})),!t.some((e=>$(e))))return;let n=await async function(e){let t=e.eventURL,n=l.load(await(await fetch(t)).text())("#mw-content-text .infobox tbody tr:nth-child(2) .infobox-image .mw-file-description > img:nth-child(1)");if(!n.attr("src"))return null;let r="https:"+n.attr("src");return r}(e.matchingEvent);if(n){for(let r=0;r<t.length;r++)await C(e,t[r],n).catch((e=>{console.warn("error downloading poster"),console.warn(e)})),await E(1e3);await E(1e4)}else console.warn("Failed to find poster")}async function E(e){await function(e){return new Promise((function(t){setTimeout(t,e)}))}(e)}function $(e){return!S(e).some((e=>e.includes("poster")))}async function C(e,t,n){if(!$(t))return;let r=/(?:\.([^.]+))?$/.exec(n)[1];t.endsWith("\\")||(t+="\\"),await b(n,`${t}poster.${r}`)}const P=e=>d.readdirSync(e,{withFileTypes:!0}).filter((e=>e.isDirectory())).map((e=>e.name)),S=e=>d.readdirSync(e,{withFileTypes:!0}).filter((e=>!e.isDirectory())).map((e=>e.name));async function b(e,t){return A(e,t)}let A=function(e,t,n){return new Promise(((n,r)=>{a.get(e,{headers:{"User-Agent":"UltimateFightARR/0.0 (https://github.com/Spade-and-Archer/UltimateFightARR; andy.tewfik@gmail.com) NodeHTTPS"}},(e=>{200===e.statusCode?e.pipe(d.createWriteStream(t)).on("error",r).once("close",(()=>n(t))):(e.resume(),r(new Error(`Request Failed With a Status Code: ${e.statusCode}`)))}))}))};s.config(),async function(){await p();let e=h.filter((e=>e.lookForDownload)),t=!1;for(let n=0;n<e.length;n++){let r=e[n];r.downloads.some((e=>"main"===e.eventType))||(await N(r,"main"),t=!0)}t&&(console.log("waiting 5 seconds for torrent client to populate folder structure"),await E(5e3),await p());for(let e=0;e<f.length;e++)await T(f[e])}();
